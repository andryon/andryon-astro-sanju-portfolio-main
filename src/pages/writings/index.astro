---
import { WritingItem } from '@components/cards';
import { Header } from '@components/misc';
import { BaseHead } from '@components/seo';
import { SITE_DESCRIPTION, SITE_TITLE } from '@data/index';
import { getCollection } from 'astro:content';
import RootLayout from '@layouts/root-layout.astro';

const writings = (await getCollection('writing')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Group writings by year
const writingsByYear = writings.reduce((acc, writing) => {
	const year = new Date(writing.data.pubDate).getFullYear();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(writing);
	return acc;
}, {} as Record<number, typeof writings>);

const years = Object.keys(writingsByYear).sort((a, b) => Number(b) - Number(a));
---

<!doctype html>
<html lang='en'>
	<head>
		<BaseHead
			title={SITE_TITLE}
			description={SITE_DESCRIPTION}
			image='/images/ogimage.png'
		/>
	</head>
	<RootLayout>
		<div class="max-w-3xl mx-auto px-4 py-6 sm:py-8">
			<div class="mb-6 sm:mb-8">
				<Header />
				<h1 class='text-4xl sm:text-5xl md:text-6xl font-medium tracking-tight mt-4 sm:mt-6 mb-3 bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent'>Writings</h1>
			</div>

			<div class="space-y-6 sm:space-y-8">
				{years.map((year) => (
					<div class="space-y-1.5 sm:space-y-2">
						<h2 class="text-sm font-medium text-gray-400 dark:text-gray-500 mb-2 sm:mb-3">{year}</h2>
						<div class="grid gap-1 sm:gap-1.5">
							{writingsByYear[year].map((writing, index) => (
								<div 
									class="transform transition-all duration-300 hover:translate-x-1 opacity-0 animate-fade-in group" 
									style={`animation-delay: ${index * 50}ms; animation-fill-mode: forwards;`}
								>
									<WritingItem
										title={writing.data.title}
										date={writing.data.pubDate}
										slug={writing.slug}
									/>
								</div>
							))}
						</div>
					</div>
				))}
			</div>
		</div>
	</RootLayout>
</html>

<style>
	@keyframes fade-in {
		from {
			opacity: 0;
			transform: translateY(6px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
	
	.animate-fade-in {
		animation: fade-in 0.3s ease-out;
	}
</style>
